!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AOBJS	Makefile	/^AOBJS = $(ASRCS:.S=$(OBJEXT))$/;"	m
ASCII_0	host/nuttx/ascii.h	107;"	d
ASCII_1	host/nuttx/ascii.h	108;"	d
ASCII_2	host/nuttx/ascii.h	109;"	d
ASCII_3	host/nuttx/ascii.h	110;"	d
ASCII_4	host/nuttx/ascii.h	111;"	d
ASCII_5	host/nuttx/ascii.h	112;"	d
ASCII_6	host/nuttx/ascii.h	113;"	d
ASCII_7	host/nuttx/ascii.h	114;"	d
ASCII_8	host/nuttx/ascii.h	115;"	d
ASCII_9	host/nuttx/ascii.h	116;"	d
ASCII_A	host/nuttx/ascii.h	125;"	d
ASCII_ACK	host/nuttx/ascii.h	55;"	d
ASCII_AMPERSAND	host/nuttx/ascii.h	92;"	d
ASCII_APOSTROPHE	host/nuttx/ascii.h	94;"	d
ASCII_ASTERISK	host/nuttx/ascii.h	97;"	d
ASCII_AT	host/nuttx/ascii.h	124;"	d
ASCII_B	host/nuttx/ascii.h	126;"	d
ASCII_BACKSLASH	host/nuttx/ascii.h	153;"	d
ASCII_BEL	host/nuttx/ascii.h	56;"	d
ASCII_BS	host/nuttx/ascii.h	57;"	d
ASCII_C	host/nuttx/ascii.h	127;"	d
ASCII_CAN	host/nuttx/ascii.h	76;"	d
ASCII_CARET	host/nuttx/ascii.h	155;"	d
ASCII_CIRCUMFLEX	host/nuttx/ascii.h	156;"	d
ASCII_COLON	host/nuttx/ascii.h	117;"	d
ASCII_COMMA	host/nuttx/ascii.h	99;"	d
ASCII_CR	host/nuttx/ascii.h	62;"	d
ASCII_D	host/nuttx/ascii.h	128;"	d
ASCII_DASH	host/nuttx/ascii.h	101;"	d
ASCII_DC1	host/nuttx/ascii.h	67;"	d
ASCII_DC2	host/nuttx/ascii.h	69;"	d
ASCII_DC3	host/nuttx/ascii.h	70;"	d
ASCII_DC4	host/nuttx/ascii.h	72;"	d
ASCII_DEL	host/nuttx/ascii.h	192;"	d
ASCII_DIVIDE	host/nuttx/ascii.h	105;"	d
ASCII_DLE	host/nuttx/ascii.h	66;"	d
ASCII_DOLLAR	host/nuttx/ascii.h	90;"	d
ASCII_E	host/nuttx/ascii.h	129;"	d
ASCII_EM	host/nuttx/ascii.h	77;"	d
ASCII_ENQ	host/nuttx/ascii.h	54;"	d
ASCII_EOT	host/nuttx/ascii.h	53;"	d
ASCII_EQUAL	host/nuttx/ascii.h	120;"	d
ASCII_ESC	host/nuttx/ascii.h	79;"	d
ASCII_ETB	host/nuttx/ascii.h	75;"	d
ASCII_ETX	host/nuttx/ascii.h	52;"	d
ASCII_EXCLAM	host/nuttx/ascii.h	86;"	d
ASCII_F	host/nuttx/ascii.h	130;"	d
ASCII_FF	host/nuttx/ascii.h	61;"	d
ASCII_FS	host/nuttx/ascii.h	80;"	d
ASCII_G	host/nuttx/ascii.h	131;"	d
ASCII_GS	host/nuttx/ascii.h	81;"	d
ASCII_GT	host/nuttx/ascii.h	121;"	d
ASCII_H	host/nuttx/ascii.h	132;"	d
ASCII_HASH	host/nuttx/ascii.h	89;"	d
ASCII_HYPHEN	host/nuttx/ascii.h	100;"	d
ASCII_I	host/nuttx/ascii.h	133;"	d
ASCII_J	host/nuttx/ascii.h	134;"	d
ASCII_K	host/nuttx/ascii.h	135;"	d
ASCII_L	host/nuttx/ascii.h	136;"	d
ASCII_LBRACE	host/nuttx/ascii.h	187;"	d
ASCII_LBRACKET	host/nuttx/ascii.h	152;"	d
ASCII_LF	host/nuttx/ascii.h	59;"	d
ASCII_LPAREN	host/nuttx/ascii.h	95;"	d
ASCII_LT	host/nuttx/ascii.h	119;"	d
ASCII_M	host/nuttx/ascii.h	137;"	d
ASCII_MINUS	host/nuttx/ascii.h	102;"	d
ASCII_N	host/nuttx/ascii.h	138;"	d
ASCII_NAK	host/nuttx/ascii.h	73;"	d
ASCII_NUL	host/nuttx/ascii.h	49;"	d
ASCII_NUMBER	host/nuttx/ascii.h	88;"	d
ASCII_O	host/nuttx/ascii.h	139;"	d
ASCII_P	host/nuttx/ascii.h	141;"	d
ASCII_PERCENT	host/nuttx/ascii.h	91;"	d
ASCII_PERIOD	host/nuttx/ascii.h	103;"	d
ASCII_PIPE	host/nuttx/ascii.h	189;"	d
ASCII_PLUS	host/nuttx/ascii.h	98;"	d
ASCII_Q	host/nuttx/ascii.h	142;"	d
ASCII_QUESTION	host/nuttx/ascii.h	122;"	d
ASCII_QUOTE	host/nuttx/ascii.h	87;"	d
ASCII_R	host/nuttx/ascii.h	143;"	d
ASCII_RBRACE	host/nuttx/ascii.h	190;"	d
ASCII_RBRACKET	host/nuttx/ascii.h	154;"	d
ASCII_RPAREN	host/nuttx/ascii.h	96;"	d
ASCII_RS	host/nuttx/ascii.h	82;"	d
ASCII_RSQUOTE	host/nuttx/ascii.h	159;"	d
ASCII_S	host/nuttx/ascii.h	144;"	d
ASCII_SEMICOLON	host/nuttx/ascii.h	118;"	d
ASCII_SI	host/nuttx/ascii.h	64;"	d
ASCII_SLASH	host/nuttx/ascii.h	104;"	d
ASCII_SO	host/nuttx/ascii.h	63;"	d
ASCII_SOH	host/nuttx/ascii.h	50;"	d
ASCII_SPACE	host/nuttx/ascii.h	85;"	d
ASCII_SQUOTE	host/nuttx/ascii.h	93;"	d
ASCII_STX	host/nuttx/ascii.h	51;"	d
ASCII_SUB	host/nuttx/ascii.h	78;"	d
ASCII_SYN	host/nuttx/ascii.h	74;"	d
ASCII_T	host/nuttx/ascii.h	145;"	d
ASCII_TAB	host/nuttx/ascii.h	58;"	d
ASCII_TILDE	host/nuttx/ascii.h	191;"	d
ASCII_U	host/nuttx/ascii.h	146;"	d
ASCII_UNDERSCORE	host/nuttx/ascii.h	157;"	d
ASCII_US	host/nuttx/ascii.h	83;"	d
ASCII_V	host/nuttx/ascii.h	147;"	d
ASCII_VERTBAR	host/nuttx/ascii.h	188;"	d
ASCII_VT	host/nuttx/ascii.h	60;"	d
ASCII_W	host/nuttx/ascii.h	148;"	d
ASCII_X	host/nuttx/ascii.h	149;"	d
ASCII_XOFF	host/nuttx/ascii.h	71;"	d
ASCII_XON	host/nuttx/ascii.h	68;"	d
ASCII_Y	host/nuttx/ascii.h	150;"	d
ASCII_Z	host/nuttx/ascii.h	151;"	d
ASCII_a	host/nuttx/ascii.h	160;"	d
ASCII_b	host/nuttx/ascii.h	161;"	d
ASCII_c	host/nuttx/ascii.h	162;"	d
ASCII_d	host/nuttx/ascii.h	163;"	d
ASCII_e	host/nuttx/ascii.h	164;"	d
ASCII_f	host/nuttx/ascii.h	165;"	d
ASCII_g	host/nuttx/ascii.h	166;"	d
ASCII_h	host/nuttx/ascii.h	167;"	d
ASCII_i	host/nuttx/ascii.h	168;"	d
ASCII_j	host/nuttx/ascii.h	169;"	d
ASCII_k	host/nuttx/ascii.h	170;"	d
ASCII_l	host/nuttx/ascii.h	171;"	d
ASCII_m	host/nuttx/ascii.h	172;"	d
ASCII_n	host/nuttx/ascii.h	173;"	d
ASCII_o	host/nuttx/ascii.h	174;"	d
ASCII_p	host/nuttx/ascii.h	176;"	d
ASCII_q	host/nuttx/ascii.h	177;"	d
ASCII_r	host/nuttx/ascii.h	178;"	d
ASCII_s	host/nuttx/ascii.h	179;"	d
ASCII_t	host/nuttx/ascii.h	180;"	d
ASCII_u	host/nuttx/ascii.h	181;"	d
ASCII_v	host/nuttx/ascii.h	182;"	d
ASCII_w	host/nuttx/ascii.h	183;"	d
ASCII_x	host/nuttx/ascii.h	184;"	d
ASCII_y	host/nuttx/ascii.h	185;"	d
ASCII_z	host/nuttx/ascii.h	186;"	d
ASRCS	Makefile	/^ASRCS  =$/;"	m
ATTNBRK	zm.h	113;"	d
ATTNPSE	zm.h	114;"	d
BIN	Makefile	/^  BIN = ..\/..\/libapps$(LIBEXT)$/;"	m
BIN	Makefile	/^  BIN = ..\\..\\libapps$(LIBEXT)$/;"	m
BIN	Makefile	/^  BIN = ..\\\\..\\\\libapps$(LIBEXT)$/;"	m
CANBRK	zm.h	68;"	d
CANCRY	zm.h	69;"	d
CANFC32	zm.h	71;"	d
CANFDX	zm.h	66;"	d
CANISTR_SIZE	zm.h	450;"	d
CANISTR_SIZE	zm_proto.c	72;"	d	file:
CANLZW	zm.h	70;"	d
CANOVIO	zm.h	67;"	d
COBJS	Makefile	/^COBJS = $(CSRCS:.c=$(OBJEXT))$/;"	m
CODE	host/nuttx/compiler.h	124;"	d
CODE	host/nuttx/compiler.h	314;"	d
CODE	host/nuttx/compiler.h	319;"	d
CODE	host/nuttx/compiler.h	430;"	d
CODE	host/nuttx/compiler.h	438;"	d
CODE	host/nuttx/compiler.h	446;"	d
CODE	host/nuttx/compiler.h	503;"	d
CODE	host/nuttx/compiler.h	542;"	d
CONFIG_CAN_PASS_STRUCTS	host/nuttx/compiler.h	246;"	d
CONFIG_CAN_PASS_STRUCTS	host/nuttx/compiler.h	359;"	d
CONFIG_CAN_PASS_STRUCTS	host/nuttx/compiler.h	474;"	d
CONFIG_CAN_PASS_STRUCTS	host/nuttx/compiler.h	553;"	d
CONFIG_CPP_HAVE_VARARGS	host/nuttx/compiler.h	254;"	d
CONFIG_CPP_HAVE_VARARGS	host/nuttx/compiler.h	373;"	d
CONFIG_CPP_HAVE_VARARGS	host/nuttx/compiler.h	480;"	d
CONFIG_CPP_HAVE_VARARGS	host/nuttx/compiler.h	521;"	d
CONFIG_CPP_HAVE_VARARGS	host/nuttx/compiler.h	53;"	d
CONFIG_CPP_HAVE_WARNING	host/nuttx/compiler.h	255;"	d
CONFIG_CPP_HAVE_WARNING	host/nuttx/compiler.h	374;"	d
CONFIG_CPP_HAVE_WARNING	host/nuttx/compiler.h	522;"	d
CONFIG_CPP_HAVE_WARNING	host/nuttx/compiler.h	54;"	d
CONFIG_DEBUG_ZMODEM	zm.h	230;"	d
CONFIG_HAVE_DOUBLE	host/nuttx/compiler.h	241;"	d
CONFIG_HAVE_DOUBLE	host/nuttx/compiler.h	352;"	d
CONFIG_HAVE_DOUBLE	host/nuttx/compiler.h	469;"	d
CONFIG_HAVE_DOUBLE	host/nuttx/compiler.h	551;"	d
CONFIG_HAVE_FARPOINTER	host/nuttx/compiler.h	178;"	d
CONFIG_HAVE_FILENAME	host/nuttx/compiler.h	260;"	d
CONFIG_HAVE_FILENAME	host/nuttx/compiler.h	379;"	d
CONFIG_HAVE_FILENAME	host/nuttx/compiler.h	481;"	d
CONFIG_HAVE_FILENAME	host/nuttx/compiler.h	524;"	d
CONFIG_HAVE_FILENAME	host/nuttx/compiler.h	59;"	d
CONFIG_HAVE_FLOAT	host/nuttx/compiler.h	240;"	d
CONFIG_HAVE_FLOAT	host/nuttx/compiler.h	351;"	d
CONFIG_HAVE_FLOAT	host/nuttx/compiler.h	468;"	d
CONFIG_HAVE_FLOAT	host/nuttx/compiler.h	482;"	d
CONFIG_HAVE_FLOAT	host/nuttx/compiler.h	550;"	d
CONFIG_HAVE_FUNCTIONNAME	host/nuttx/compiler.h	259;"	d
CONFIG_HAVE_FUNCTIONNAME	host/nuttx/compiler.h	378;"	d
CONFIG_HAVE_FUNCTIONNAME	host/nuttx/compiler.h	523;"	d
CONFIG_HAVE_FUNCTIONNAME	host/nuttx/compiler.h	58;"	d
CONFIG_HAVE_INLINE	host/nuttx/compiler.h	235;"	d
CONFIG_HAVE_INLINE	host/nuttx/compiler.h	345;"	d
CONFIG_HAVE_INLINE	host/nuttx/compiler.h	458;"	d
CONFIG_HAVE_INLINE	host/nuttx/compiler.h	547;"	d
CONFIG_HAVE_LONG_DOUBLE	host/nuttx/compiler.h	242;"	d
CONFIG_HAVE_LONG_DOUBLE	host/nuttx/compiler.h	353;"	d
CONFIG_HAVE_LONG_DOUBLE	host/nuttx/compiler.h	470;"	d
CONFIG_HAVE_LONG_DOUBLE	host/nuttx/compiler.h	552;"	d
CONFIG_HAVE_LONG_LONG	host/nuttx/compiler.h	239;"	d
CONFIG_HAVE_LONG_LONG	host/nuttx/compiler.h	350;"	d
CONFIG_HAVE_LONG_LONG	host/nuttx/compiler.h	467;"	d
CONFIG_HAVE_LONG_LONG	host/nuttx/compiler.h	549;"	d
CONFIG_HAVE_WEAKFUNCTIONS	host/nuttx/compiler.h	272;"	d
CONFIG_HAVE_WEAKFUNCTIONS	host/nuttx/compiler.h	391;"	d
CONFIG_HAVE_WEAKFUNCTIONS	host/nuttx/compiler.h	525;"	d
CONFIG_HAVE_WEAKFUNCTIONS	host/nuttx/compiler.h	72;"	d
CONFIG_HAVE_WEAKFUNCTIONS	host/nuttx/compiler.h	78;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	142;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	168;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	198;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	206;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	226;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	333;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	432;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	440;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	448;"	d
CONFIG_LONG_IS_NOT_INT	host/nuttx/compiler.h	545;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	146;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	172;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	202;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	210;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	230;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	340;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	433;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	441;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	450;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	452;"	d
CONFIG_PTR_IS_NOT_INT	host/nuttx/compiler.h	546;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	138;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	164;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	188;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	222;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	329;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	431;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	439;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	447;"	d
CONFIG_SMALL_MEMORY	host/nuttx/compiler.h	544;"	d
CONFIG_SYSTEM_RZPROGNAME	Makefile	/^CONFIG_SYSTEM_RZPROGNAME ?= rz$(EXEEXT)$/;"	m
CONFIG_SYSTEM_SZPROGNAME	Makefile	/^CONFIG_SYSTEM_SZPROGNAME ?= sz$(EXEEXT)$/;"	m
CONFIG_SYSTEM_ZMODEM	host/nuttx/config.h	60;"	d
CONFIG_SYSTEM_ZMODEM_ALWAYSSINT	host/nuttx/config.h	68;"	d
CONFIG_SYSTEM_ZMODEM_CONNTIME	host/apps/zmodem.h	144;"	d
CONFIG_SYSTEM_ZMODEM_CONNTIME	host/nuttx/config.h	71;"	d
CONFIG_SYSTEM_ZMODEM_DEVNAME	host/apps/zmodem.h	62;"	d
CONFIG_SYSTEM_ZMODEM_DEVNAME	host/nuttx/config.h	61;"	d
CONFIG_SYSTEM_ZMODEM_DUMPBUFFER	zm.h	236;"	d
CONFIG_SYSTEM_ZMODEM_MAXERRORS	host/apps/zmodem.h	156;"	d
CONFIG_SYSTEM_ZMODEM_MAXERRORS	host/nuttx/config.h	73;"	d
CONFIG_SYSTEM_ZMODEM_MOUNTPOINT	host/apps/zmodem.h	101;"	d
CONFIG_SYSTEM_ZMODEM_MOUNTPOINT	host/apps/zmodem.h	177;"	d
CONFIG_SYSTEM_ZMODEM_MOUNTPOINT	host/nuttx/config.h	65;"	d
CONFIG_SYSTEM_ZMODEM_MOUNTPOINT	host/nuttx/config.h	75;"	d
CONFIG_SYSTEM_ZMODEM_PKTBUFSIZE	host/apps/zmodem.h	84;"	d
CONFIG_SYSTEM_ZMODEM_PKTBUFSIZE	host/nuttx/config.h	63;"	d
CONFIG_SYSTEM_ZMODEM_RCVBUFSIZE	host/apps/zmodem.h	75;"	d
CONFIG_SYSTEM_ZMODEM_RCVBUFSIZE	host/nuttx/config.h	62;"	d
CONFIG_SYSTEM_ZMODEM_RCVSAMPLE	host/apps/zmodem.h	117;"	d
CONFIG_SYSTEM_ZMODEM_RCVSAMPLE	host/nuttx/config.h	66;"	d
CONFIG_SYSTEM_ZMODEM_RESPTIME	host/apps/zmodem.h	135;"	d
CONFIG_SYSTEM_ZMODEM_RESPTIME	host/nuttx/config.h	70;"	d
CONFIG_SYSTEM_ZMODEM_SENDATTN	host/apps/zmodem.h	129;"	d
CONFIG_SYSTEM_ZMODEM_SENDATTN	host/nuttx/config.h	67;"	d
CONFIG_SYSTEM_ZMODEM_SENDBRAK	host/nuttx/config.h	69;"	d
CONFIG_SYSTEM_ZMODEM_SERIALNO	host/apps/zmodem.h	150;"	d
CONFIG_SYSTEM_ZMODEM_SERIALNO	host/nuttx/config.h	72;"	d
CONFIG_SYSTEM_ZMODEM_SNDBUFSIZE	host/apps/zmodem.h	92;"	d
CONFIG_SYSTEM_ZMODEM_SNDBUFSIZE	host/nuttx/config.h	64;"	d
CONFIG_SYSTEM_ZMODEM_WRITESIZE	host/apps/zmodem.h	165;"	d
CONFIG_SYSTEM_ZMODEM_WRITESIZE	host/nuttx/config.h	74;"	d
CSRCS	Makefile	/^CSRCS  = zm_send.c zm_receive.c zm_state.c zm_proto.c zm_watchdog.c$/;"	m
DEBUGASSERT	host/nuttx/config.h	54;"	d
DSEG	host/nuttx/compiler.h	123;"	d
DSEG	host/nuttx/compiler.h	315;"	d
DSEG	host/nuttx/compiler.h	321;"	d
DSEG	host/nuttx/compiler.h	323;"	d
DSEG	host/nuttx/compiler.h	429;"	d
DSEG	host/nuttx/compiler.h	437;"	d
DSEG	host/nuttx/compiler.h	445;"	d
DSEG	host/nuttx/compiler.h	502;"	d
DSEG	host/nuttx/compiler.h	541;"	d
ERROR	host/nuttx/config.h	52;"	d
ESC8	zm.h	73;"	d
ESCCTL	zm.h	72;"	d
EXTERN	host/apps/zmodem.h	216;"	d
EXTERN	host/apps/zmodem.h	218;"	d
EXTERN	host/apps/zmodem.h	222;"	d
EXTERN	host/apps/zmodem.h	343;"	d
EXTERN	host/crc16.h	51;"	d
EXTERN	host/crc16.h	55;"	d
EXTERN	host/crc16.h	78;"	d
EXTERN	host/crc32.h	51;"	d
EXTERN	host/crc32.h	55;"	d
EXTERN	host/crc32.h	78;"	d
EXTERN	zm.h	425;"	d
EXTERN	zm.h	427;"	d
EXTERN	zm.h	431;"	d
EXTERN	zm.h	798;"	d
EXTRA_ARG	host/debug.h	52;"	d
EXTRA_ARG	host/debug.h	55;"	d
EXTRA_FMT	host/debug.h	51;"	d
EXTRA_FMT	host/debug.h	54;"	d
FAR	host/nuttx/compiler.h	121;"	d
FAR	host/nuttx/compiler.h	312;"	d
FAR	host/nuttx/compiler.h	317;"	d
FAR	host/nuttx/compiler.h	427;"	d
FAR	host/nuttx/compiler.h	435;"	d
FAR	host/nuttx/compiler.h	443;"	d
FAR	host/nuttx/compiler.h	500;"	d
FAR	host/nuttx/compiler.h	539;"	d
FAR	host/nuttx/config.h	53;"	d
INSTALL_DIR	Makefile	/^  INSTALL_DIR = "${shell cygpath -w $(BIN_DIR)}"$/;"	m
INSTALL_DIR	Makefile	/^  INSTALL_DIR = $(BIN_DIR)$/;"	m
IOBJ	host/nuttx/compiler.h	133;"	d
IOBJ	host/nuttx/compiler.h	152;"	d
IOBJ	host/nuttx/compiler.h	158;"	d
IOBJ	host/nuttx/compiler.h	183;"	d
IOBJ	host/nuttx/compiler.h	217;"	d
IOBJ	host/nuttx/compiler.h	383;"	d
IPTR	host/nuttx/compiler.h	134;"	d
IPTR	host/nuttx/compiler.h	153;"	d
IPTR	host/nuttx/compiler.h	159;"	d
IPTR	host/nuttx/compiler.h	184;"	d
IPTR	host/nuttx/compiler.h	218;"	d
IPTR	host/nuttx/compiler.h	384;"	d
IPTR	host/nuttx/compiler.h	504;"	d
NEAR	host/nuttx/compiler.h	122;"	d
NEAR	host/nuttx/compiler.h	313;"	d
NEAR	host/nuttx/compiler.h	318;"	d
NEAR	host/nuttx/compiler.h	428;"	d
NEAR	host/nuttx/compiler.h	436;"	d
NEAR	host/nuttx/compiler.h	444;"	d
NEAR	host/nuttx/compiler.h	501;"	d
NEAR	host/nuttx/compiler.h	540;"	d
OBJS	Makefile	/^OBJS = $(AOBJS) $(COBJS)$/;"	m
OK	host/nuttx/config.h	51;"	d
PDATA_CRC	zm.h	/^  PDATA_CRC                  \/* Have the packet type, accumulating the CRC *\/$/;"	e	enum:pdata_substate_e
PDATA_READ	zm.h	/^  PDATA_READ = 0,            \/* Waiting for ZDLE <packet type> *\/$/;"	e	enum:pdata_substate_e
PHEADER_FORMAT	zm.h	/^  PHEADER_FORMAT = 0,        \/* Waiting for the header format {ZBIN, ZBIN32, ZHEX} *\/$/;"	e	enum:pheader_substate_e
PHEADER_LSPAYLOAD	zm.h	/^  PHEADER_LSPAYLOAD,         \/* Waiting for LS nibble of header data (ZHEX only) *\/$/;"	e	enum:pheader_substate_e
PHEADER_PAYLOAD	zm.h	/^  PHEADER_PAYLOAD,           \/* Waiting for header data {Type Pn\/Fn CRC} *\/$/;"	e	enum:pheader_substate_e
PIDLE_OO	zm.h	/^  PIDLE_OO                   \/* First 'O' received, waiting for second 'O' of "OO" *\/$/;"	e	enum:pidle_substate_e
PIDLE_ZDLE	zm.h	/^  PIDLE_ZDLE,                \/* ZPAD received, waiting for ZDLE *\/$/;"	e	enum:pidle_substate_e
PIDLE_ZPAD	zm.h	/^  PIDLE_ZPAD = 0,            \/* Waiting for ZPAD *\/$/;"	e	enum:pidle_substate_e
PRIORITY	Makefile	/^PRIORITY = SCHED_PRIORITY_DEFAULT$/;"	m
PSTATE_DATA	zm.h	/^  PSTATE_DATA,               \/* Sending\/receiving data *\/$/;"	e	enum:parser_state_e
PSTATE_HEADER	zm.h	/^  PSTATE_HEADER,             \/* Parsing a header following ZPAD ZDLE *\/$/;"	e	enum:parser_state_e
PSTATE_IDLE	zm.h	/^  PSTATE_IDLE = 0,           \/* Nothing in progress *\/$/;"	e	enum:parser_state_e
ROOTDEPPATH	Makefile	/^ROOTDEPPATH = --dep-path .$/;"	m
RZ_MAINOBJ	Makefile	/^RZ_MAINOBJ = $(RZ_MAINSRC:.c=$(OBJEXT))$/;"	m
RZ_MAINSRC	Makefile	/^RZ_MAINSRC = rz_main.c$/;"	m
RZ_PROGNAME	Makefile	/^RZ_PROGNAME = $(CONFIG_SYSTEM_RZPROGNAME)$/;"	m
SRCS	Makefile	/^SRCS = $(ASRCS) $(CSRCS) $(SZ_MAINSRC) $(RZ_MAINSRC)$/;"	m
STACKSIZE	Makefile	/^STACKSIZE = 1536$/;"	m
SZ_MAINOBJ	Makefile	/^SZ_MAINOBJ = $(SZ_MAINSRC:.c=$(OBJEXT))$/;"	m
SZ_MAINSRC	Makefile	/^SZ_MAINSRC = sz_main.c$/;"	m
SZ_PROGNAME	Makefile	/^SZ_PROGNAME = $(CONFIG_SYSTEM_SZPROGNAME)$/;"	m
TESC8	zm.h	78;"	d
TESCCTL	zm.h	77;"	d
UNUSED	host/nuttx/compiler.h	486;"	d
UNUSED	host/nuttx/compiler.h	63;"	d
VPATH	Makefile	/^VPATH =$/;"	m
XM_OPTION_APPEND	host/apps/zmodem.h	/^  XM_OPTION_APPEND   = 3,    \/* Append to existing file, if any *\/$/;"	e	enum:zm_option_e
XM_OPTION_CRC	host/apps/zmodem.h	/^  XM_OPTION_CRC      = 2,    \/* Transfer if different CRC or length *\/$/;"	e	enum:zm_option_e
XM_OPTION_CREATE	host/apps/zmodem.h	/^  XM_OPTION_CREATE   = 7,    \/* Protect: transfer only if dest doesn't exist *\/$/;"	e	enum:zm_option_e
XM_OPTION_DIFF	host/apps/zmodem.h	/^  XM_OPTION_DIFF     = 6,    \/* Transfer if dates or lengths different *\/$/;"	e	enum:zm_option_e
XM_OPTION_NEW	host/apps/zmodem.h	/^  XM_OPTION_NEW      = 5,    \/* Transfer if source is newer *\/$/;"	e	enum:zm_option_e
XM_OPTION_NEWL	host/apps/zmodem.h	/^  XM_OPTION_NEWL     = 1,    \/* Transfer if source newer or longer *\/$/;"	e	enum:zm_option_e
XM_OPTION_NONE	host/apps/zmodem.h	/^  XM_OPTION_NONE     = 0,    \/* Transfer if source newer or longer *\/$/;"	e	enum:zm_option_e
XM_OPTION_RENAME	host/apps/zmodem.h	/^  XM_OPTION_RENAME   = 8     \/* Change filename if destination exists *\/$/;"	e	enum:zm_option_e
XM_OPTION_REPLACE	host/apps/zmodem.h	/^  XM_OPTION_REPLACE  = 4,    \/* Replace existing file *\/$/;"	e	enum:zm_option_e
XM_XFERTYPE_ASCII	host/apps/zmodem.h	/^  XM_XFERTYPE_ASCII  = 2,    \/* Convert \\n to local EOL convention *\/$/;"	e	enum:zm_xfertype_e
XM_XFERTYPE_BINARY	host/apps/zmodem.h	/^  XM_XFERTYPE_BINARY = 1,    \/* Binary transfer *\/$/;"	e	enum:zm_xfertype_e
XM_XFERTYPE_NORMAL	host/apps/zmodem.h	/^  XM_XFERTYPE_NORMAL = 0,    \/* Normal file transfer *\/$/;"	e	enum:zm_xfertype_e
XM_XFERTYPE_RESUME	host/apps/zmodem.h	/^  XM_XFERTYPE_RESUME = 3     \/* Resume interrupted transfer or append to file. *\/$/;"	e	enum:zm_xfertype_e
ZABORT	zm.h	125;"	d
ZACK	zm.h	121;"	d
ZBIN	zm.h	144;"	d
ZBIN32	zm.h	146;"	d
ZBINR32	zm.h	147;"	d
ZCAN	zm.h	134;"	d
ZCANVHDR	zm.h	107;"	d
ZCBIN	zm.h	83;"	d
ZCHALLENGE	zm.h	132;"	d
ZCNL	zm.h	84;"	d
ZCOMMAND	zm.h	136;"	d
ZCOMPL	zm.h	133;"	d
ZCRC	zm.h	131;"	d
ZCRCE	zm.h	156;"	d
ZCRCG	zm.h	157;"	d
ZCRCQ	zm.h	158;"	d
ZCRCW	zm.h	159;"	d
ZCRESUM	zm.h	85;"	d
ZDATA	zm.h	128;"	d
ZDLE	zm.h	141;"	d
ZDLEE	zm.h	142;"	d
ZEOF	zm.h	129;"	d
ZFERR	zm.h	130;"	d
ZFILE	zm.h	122;"	d
ZFIN	zm.h	126;"	d
ZFREECNT	zm.h	135;"	d
ZHEX	zm.h	145;"	d
ZMAPND	zm.h	91;"	d
ZMCHNG	zm.h	96;"	d
ZMCLOB	zm.h	92;"	d
ZMCRC	zm.h	90;"	d
ZMDIFF	zm.h	94;"	d
ZME_ABORT	zm.h	173;"	d
ZME_ACK	zm.h	169;"	d
ZME_CAN	zm.h	182;"	d
ZME_CANCEL	zm.h	187;"	d
ZME_CHALLENGE	zm.h	180;"	d
ZME_COMMAND	zm.h	184;"	d
ZME_COMPL	zm.h	181;"	d
ZME_CRC	zm.h	179;"	d
ZME_DATA	zm.h	176;"	d
ZME_DATARCVD	zm.h	189;"	d
ZME_EOF	zm.h	177;"	d
ZME_ERROR	zm.h	191;"	d
ZME_FERR	zm.h	178;"	d
ZME_FILE	zm.h	170;"	d
ZME_FIN	zm.h	174;"	d
ZME_FREECNT	zm.h	183;"	d
ZME_NAK	zm.h	172;"	d
ZME_OO	zm.h	188;"	d
ZME_RINIT	zm.h	167;"	d
ZME_RPOS	zm.h	175;"	d
ZME_RQINIT	zm.h	166;"	d
ZME_SINIT	zm.h	168;"	d
ZME_SKIP	zm.h	171;"	d
ZME_STDERR	zm.h	185;"	d
ZME_TIMEOUT	zm.h	190;"	d
ZMHANDLE	host/apps/zmodem.h	/^typedef FAR void *ZMHANDLE;$/;"	t
ZMMASK	zm.h	97;"	d
ZMNEW	zm.h	93;"	d
ZMNEWL	zm.h	89;"	d
ZMPROT	zm.h	95;"	d
ZMRHANDLE	host/apps/zmodem.h	/^typedef FAR void *ZMRHANDLE;$/;"	t
ZMR_COMMAND	zm_receive.c	/^  ZMR_COMMAND,     \/* Waiting for command data *\/$/;"	e	enum:zmrs_e	file:
ZMR_CRCWAIT	zm_receive.c	/^  ZMR_CRCWAIT,     \/* Received ZDATA filename, send ZCRC, wait for ZCRC response *\/$/;"	e	enum:zmrs_e	file:
ZMR_DONE	zm_receive.c	/^  ZMR_DONE         \/* Finished with transfer *\/$/;"	e	enum:zmrs_e	file:
ZMR_FILEINFO	zm_receive.c	/^  ZMR_FILEINFO,    \/* Received ZFILE, sent ZRPOS, waiting for filename in ZDATA *\/$/;"	e	enum:zmrs_e	file:
ZMR_FINISH	zm_receive.c	/^  ZMR_FINISH,      \/* Received ZFIN, sent ZFIN, waiting for "OO" or ZRQINIT *\/$/;"	e	enum:zmrs_e	file:
ZMR_INITWAIT	zm_receive.c	/^  ZMR_INITWAIT,    \/* Received ZSINIT, sent ZACK, waiting for ZFILE *\/$/;"	e	enum:zmrs_e	file:
ZMR_MESSAGE	zm_receive.c	/^  ZMR_MESSAGE,     \/* Waiting for message from receiver *\/$/;"	e	enum:zmrs_e	file:
ZMR_READING	zm_receive.c	/^  ZMR_READING,     \/* Reading data *\/$/;"	e	enum:zmrs_e	file:
ZMR_READREADY	zm_receive.c	/^  ZMR_READREADY,   \/* Received ZDATA filename and ZCRC, ready for data packets *\/$/;"	e	enum:zmrs_e	file:
ZMR_START	zm_receive.c	/^  ZMR_START = 0,   \/* Sent ZRINIT, waiting for ZFILE or ZSINIT *\/$/;"	e	enum:zmrs_e	file:
ZMSHANDLE	host/apps/zmodem.h	/^typedef FAR void *ZMSHANDLE;$/;"	t
ZMSKNOLOC	zm.h	98;"	d
ZMS_COMMAND	zm_send.c	/^  ZMS_COMMAND,        \/* Waiting for command data *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_CRCWAIT	zm_send.c	/^  ZMS_CRCWAIT,        \/* Sent file CRC, waiting for ZRPOS *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_DONE	zm_send.c	/^  ZMS_DONE            \/* Finished with the file transfer *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_FILEWAIT	zm_send.c	/^  ZMS_FILEWAIT,       \/* Sent file header, waiting for ZRPOS *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_FINISH	zm_send.c	/^  ZMS_FINISH,         \/* Sent ZFIN, waiting for ZFIN *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_INITACK	zm_send.c	/^  ZMS_INITACK,        \/* Received ZRINIT, sent ZSINIT, waiting for ZACK *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_MESSAGE	zm_send.c	/^  ZMS_MESSAGE,        \/* Waiting for message from received *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_SENDDONE	zm_send.c	/^  ZMS_SENDDONE,       \/* File finished, need to send ZEOF *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_SENDEOF	zm_send.c	/^  ZMS_SENDEOF,        \/* Sent ZEOF, waiting for ZACK *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_SENDING	zm_send.c	/^  ZMS_SENDING,        \/* Streaming data subpackets, ready for interrupt *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_SENDWAIT	zm_send.c	/^  ZMS_SENDWAIT,       \/* Waiting for ZACK *\/$/;"	e	enum:zmodem_state_e	file:
ZMS_START	zm_send.c	/^  ZMS_START = 0,      \/* ZRQINIT sent, waiting for ZRINIT from receiver *\/$/;"	e	enum:zmodem_state_e	file:
ZM_FLAG_APPEND	zm.h	202;"	d
ZM_FLAG_ATSIGN	zm.h	198;"	d
ZM_FLAG_CRC32	zm.h	195;"	d
ZM_FLAG_CRKOK	zm.h	196;"	d
ZM_FLAG_EOF	zm.h	197;"	d
ZM_FLAG_ESC	zm.h	200;"	d
ZM_FLAG_ESCCTRL	zm.h	199;"	d
ZM_FLAG_OO	zm.h	204;"	d
ZM_FLAG_TIMEOUT	zm.h	203;"	d
ZM_FLAG_WAIT	zm.h	201;"	d
ZM_PKTBUFSIZE	zm.h	219;"	d
ZM_XFRDONE	zm.h	213;"	d
ZNAK	zm.h	124;"	d
ZPAD	zm.h	143;"	d
ZRESC	zm.h	152;"	d
ZRINIT	zm.h	119;"	d
ZRPOS	zm.h	127;"	d
ZRQINIT	zm.h	118;"	d
ZRUB0	zm.h	160;"	d
ZRUB1	zm.h	161;"	d
ZRWOVR	zm.h	108;"	d
ZSINIT	zm.h	120;"	d
ZSKIP	zm.h	123;"	d
ZSTDERR	zm.h	137;"	d
ZTLZW	zm.h	102;"	d
ZTRLE	zm.h	103;"	d
ZVBIN	zm.h	148;"	d
ZVBIN32	zm.h	150;"	d
ZVBINR32	zm.h	151;"	d
ZVHEX	zm.h	149;"	d
ZXSPARS	zm.h	109;"	d
_GNU_SOURCE	host/nuttx/config.h	56;"	d
__APPS_INCLUDE_SYSTEM_ZMODEM_H	host/apps/zmodem.h	41;"	d
__APPS_SYSTEM_XMODEM_ZM_H	zm.h	41;"	d
__APPS_SYSTEM_ZMODEM_HOST_CRC16_H	host/crc16.h	37;"	d
__APPS_SYSTEM_ZMODEM_HOST_CRC32_H	host/crc32.h	37;"	d
__APPS_SYSTEM_ZMODEM_HOST_DEBUG_H	host/debug.h	37;"	d
__APPS_SYSTEM_ZMODEM_HOST_NUTTX_ASCII_H	host/nuttx/ascii.h	38;"	d
__APPS_SYSTEM_ZMODEM_HOST_NUTTX_COMPILER_H	host/nuttx/compiler.h	37;"	d
__APPS_SYSTEM_ZMODEM_HOST_NUTTX_CONFIG_H	host/nuttx/config.h	37;"	d
__asm__	host/nuttx/compiler.h	506;"	d
__volatile__	host/nuttx/compiler.h	507;"	d
action	zm.h	/^  action_t   action;         \/* Transition action *\/$/;"	m	struct:zm_transition_s
action_t	zm.h	/^typedef int (*action_t)(FAR struct zm_state_s *pzm);$/;"	t
attn	zm.h	/^  FAR char *attn;            \/* Attention string *\/$/;"	m	struct:zms_state_s
attn	zm.h	/^  FAR char *attn;            \/* Attention string received from remote peer *\/$/;"	m	struct:zmr_state_s
bdiscard	zm.h	/^  bool       bdiscard;       \/* TRUE: discard buffered input *\/$/;"	m	struct:zm_transition_s
begin_packed_struct	host/nuttx/compiler.h	281;"	d
begin_packed_struct	host/nuttx/compiler.h	400;"	d
begin_packed_struct	host/nuttx/compiler.h	493;"	d
begin_packed_struct	host/nuttx/compiler.h	532;"	d
begin_packed_struct	host/nuttx/compiler.h	98;"	d
cmn	zm.h	/^  struct zm_state_s cmn;$/;"	m	struct:zmr_state_s	typeref:struct:zmr_state_s::zm_state_s
cmn	zm.h	/^  struct zm_state_s cmn;$/;"	m	struct:zms_state_s	typeref:struct:zms_state_s::zm_state_s
crc	zm.h	/^  uint32_t crc;              \/* Remove file CRC *\/$/;"	m	struct:zmr_state_s
crc16	host/crc16.c	/^uint16_t crc16(const uint8_t *src, size_t len)$/;"	f
crc16_tab	host/crc16.c	/^static uint16_t crc16_tab[256] =$/;"	v	file:
crc16part	host/crc16.c	/^uint16_t crc16part(const uint8_t *src, size_t len, uint16_t crc16val)$/;"	f
crc32	host/crc32.c	/^uint32_t crc32(const uint8_t *src, size_t len)$/;"	f
crc32_tab	host/crc32.c	/^static const uint32_t crc32_tab[] =$/;"	v	file:
crc32part	host/crc32.c	/^uint32_t crc32part(const uint8_t *src, size_t len, uint32_t crc32val)$/;"	f
dpkttype	zm.h	/^  uint8_t dpkttype;          \/* Streaming data packet type: ZCRCG, ZCRCQ, or ZCRCW *\/$/;"	m	struct:zms_state_s
end_packed_struct	host/nuttx/compiler.h	282;"	d
end_packed_struct	host/nuttx/compiler.h	401;"	d
end_packed_struct	host/nuttx/compiler.h	494;"	d
end_packed_struct	host/nuttx/compiler.h	533;"	d
end_packed_struct	host/nuttx/compiler.h	99;"	d
evtable	zm.h	/^  FAR const struct zm_transition_s * const * evtable;$/;"	m	struct:zm_state_s
f0	zm.h	/^  uint8_t f0;                \/* Transfer flag F0 *\/$/;"	m	struct:zmr_state_s
f1	zm.h	/^  uint8_t f1;                \/* Transfer flag F1 *\/$/;"	m	struct:zmr_state_s
farcall_function	host/nuttx/compiler.h	286;"	d
farcall_function	host/nuttx/compiler.h	408;"	d
farcall_function	host/nuttx/compiler.h	492;"	d
farcall_function	host/nuttx/compiler.h	531;"	d
farcall_function	host/nuttx/compiler.h	92;"	d
fdin	zm.h	/^  int fdin;   \/* Probably 0 (stdin) *\/$/;"	m	struct:zm_state_s
fdout	zm.h	/^  int fdout;  \/* probably 1 (stdout) *\/$/;"	m	struct:zm_state_s
fflags	zm.h	/^  uint8_t fflags[4];         \/* File xfer flags *\/$/;"	m	struct:zms_state_s
filename	zm.h	/^  FAR char *filename;        \/* Local filename *\/$/;"	m	struct:zmr_state_s
filename	zm.h	/^  FAR const char *filename;  \/* Local filename *\/$/;"	m	struct:zms_state_s
filesize	zm.h	/^  off_t filesize;            \/* Remote file size *\/$/;"	m	struct:zmr_state_s
filesize	zm.h	/^  off_t filesize;            \/* Size of the file to send *\/$/;"	m	struct:zms_state_s
flags	zm.h	/^  uint16_t flags;            \/* See ZM_FLAG_* definitions *\/$/;"	m	struct:zm_state_s
g_canistr	zm.h	/^EXTERN const uint8_t g_canistr[CANISTR_SIZE];$/;"	v
g_canistr	zm_proto.c	/^const uint8_t g_canistr[CANISTR_SIZE] =$/;"	v
g_zeroes	zm.h	/^EXTERN const uint8_t g_zeroes[4];$/;"	v
g_zeroes	zm_utils.c	/^const uint8_t g_zeroes[4] = { 0, 0, 0, 0 };$/;"	v
g_zmr_command	zm_receive.c	/^static const struct zm_transition_s g_zmr_command[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_crcwait	zm_receive.c	/^static const struct zm_transition_s g_zmr_crcwait[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_done	zm_receive.c	/^static struct zm_transition_s g_zmr_done[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_evtable	zm_receive.c	/^static const struct zm_transition_s *g_zmr_evtable[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_fileinfo	zm_receive.c	/^static const struct zm_transition_s g_zmr_fileinfo[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_finish	zm_receive.c	/^static const struct zm_transition_s g_zmr_finish[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_initack	zm_send.c	/^static const struct zm_transition_s g_zmr_initack[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_initwait	zm_receive.c	/^static const struct zm_transition_s g_zmr_initwait[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_message	zm_receive.c	/^static struct zm_transition_s g_zmr_message[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_reading	zm_receive.c	/^static const struct zm_transition_s g_zmr_reading[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_readready	zm_receive.c	/^static const struct zm_transition_s g_zmr_readready[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_sending	zm_send.c	/^static const struct zm_transition_s g_zmr_sending[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zmr_start	zm_receive.c	/^static const struct zm_transition_s g_zmr_start[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_command	zm_send.c	/^static struct zm_transition_s g_zms_command[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_crcwait	zm_send.c	/^static const struct zm_transition_s g_zms_crcwait[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_done	zm_send.c	/^static struct zm_transition_s g_zms_done[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_evtable	zm_send.c	/^static FAR const struct zm_transition_s * const g_zms_evtable[] =$/;"	v	file:
g_zms_filewait	zm_send.c	/^static const struct zm_transition_s g_zms_filewait[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_finish	zm_send.c	/^static const struct zm_transition_s g_zms_finish[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_message	zm_send.c	/^static struct zm_transition_s g_zms_message[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_senddone	zm_send.c	/^static const struct zm_transition_s g_zms_senddone[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_sendeof	zm_send.c	/^const struct zm_transition_s g_zms_sendeof[] =$/;"	v	typeref:struct:zm_transition_s
g_zms_sendwait	zm_send.c	/^static const struct zm_transition_s g_zms_sendwait[] =$/;"	v	typeref:struct:zm_transition_s	file:
g_zms_start	zm_send.c	/^static const struct zm_transition_s g_zms_start[] =$/;"	v	typeref:struct:zm_transition_s	file:
hdrdata	zm.h	/^  uint8_t  hdrdata[9];       \/* 1-byte + 4-byte payload + 2- or 4-byte CRC *\/$/;"	m	struct:zm_state_s
hdrfmt	zm.h	/^  uint8_t  hdrfmt;           \/* Header format {ZBIN, ZBIN32, or ZHEX} *\/$/;"	m	struct:zm_state_s
hdrndx	zm.h	/^  uint8_t  hdrndx;           \/* Index into hdrdata (1) *\/$/;"	m	struct:zm_state_s
infd	zm.h	/^  int infd;                  \/* Local input file descriptor *\/$/;"	m	struct:zms_state_s
inline	host/nuttx/compiler.h	346;"	d
inline	host/nuttx/compiler.h	459;"	d
inline	host/nuttx/compiler.h	548;"	d
inline_function	host/nuttx/compiler.h	116;"	d
inline_function	host/nuttx/compiler.h	294;"	d
inline_function	host/nuttx/compiler.h	403;"	d
inline_function	host/nuttx/compiler.h	497;"	d
inline_function	host/nuttx/compiler.h	536;"	d
lastoffs	zm.h	/^  off_t lastoffs;            \/* Last acknowledged file offset *\/$/;"	m	struct:zms_state_s
main	rz_main.c	/^int main(int argc, FAR char *argv[])$/;"	f
main	sz_main.c	/^int main(int argc, FAR char *argv[])$/;"	f
naked_function	host/nuttx/compiler.h	109;"	d
naked_function	host/nuttx/compiler.h	290;"	d
naked_function	host/nuttx/compiler.h	402;"	d
naked_function	host/nuttx/compiler.h	496;"	d
naked_function	host/nuttx/compiler.h	535;"	d
ncan	zm.h	/^  uint8_t  ncan;             \/* Number of consecutive CAN chars received (1) *\/$/;"	m	struct:zm_state_s
ncrc	zm.h	/^  uint8_t  ncrc;             \/* Number of bytes in CRC: 2 or 4 (1) *\/$/;"	m	struct:zm_state_s
nerrors	zm.h	/^  uint16_t nerrors;          \/* Number of data errors *\/$/;"	m	struct:zm_state_s
next	zm.h	/^  uint8_t    next;           \/* Next state *\/$/;"	m	struct:zm_transition_s
noinline_function	host/nuttx/compiler.h	117;"	d
noinline_function	host/nuttx/compiler.h	295;"	d
noinline_function	host/nuttx/compiler.h	404;"	d
noinline_function	host/nuttx/compiler.h	498;"	d
noinline_function	host/nuttx/compiler.h	537;"	d
noreturn_function	host/nuttx/compiler.h	280;"	d
noreturn_function	host/nuttx/compiler.h	399;"	d
noreturn_function	host/nuttx/compiler.h	491;"	d
noreturn_function	host/nuttx/compiler.h	530;"	d
noreturn_function	host/nuttx/compiler.h	86;"	d
ntimeouts	zm.h	/^  uint8_t ntimeouts;         \/* Number of timeouts *\/$/;"	m	struct:zmr_state_s
offset	zm.h	/^  off_t offset;              \/* Current file offset *\/$/;"	m	struct:zmr_state_s
offset	zm.h	/^  off_t offset;              \/* Current file offset *\/$/;"	m	struct:zms_state_s
outfd	zm.h	/^  int outfd;                 \/* Local output file descriptor *\/$/;"	m	struct:zmr_state_s
parser_state_e	zm.h	/^enum parser_state_e$/;"	g
pdata_substate_e	zm.h	/^enum pdata_substate_e$/;"	g
pheader_substate_e	zm.h	/^enum pheader_substate_e$/;"	g
pidle_substate_e	zm.h	/^enum pidle_substate_e$/;"	g
pktbuf	zm.h	/^  uint8_t  pktbuf[ZM_PKTBUFSIZE];$/;"	m	struct:zm_state_s
pktlen	zm.h	/^  uint16_t pktlen;           \/* Number valid bytes in pktbuf[] *\/$/;"	m	struct:zm_state_s
pkttype	zm.h	/^  uint8_t  pkttype;          \/* Type of data packet {ZCRCW, ZCRCE, ZCRCG, ZCRCQ} *\/$/;"	m	struct:zm_state_s
pstate	zm.h	/^  uint8_t  pstate;           \/* Current parser state *\/$/;"	m	struct:zm_state_s
psubstate	zm.h	/^  uint8_t  psubstate;        \/* Current parser sub-state (1) *\/$/;"	m	struct:zm_state_s
rcaps	zm.h	/^  uint8_t rcaps;             \/* Receiver capabilities *\/$/;"	m	struct:zmr_state_s
rcvbuf	zm.h	/^  uint8_t  rcvbuf[CONFIG_SYSTEM_ZMODEM_RCVBUFSIZE];$/;"	m	struct:zm_state_s
rcvlen	zm.h	/^  uint16_t rcvlen;           \/* Number valid bytes in rcvbuf[] *\/$/;"	m	struct:zm_state_s
rcvmax	zm.h	/^  uint16_t rcvmax;           \/* Max packet size the remote can receive. *\/$/;"	m	struct:zms_state_s
rcvndx	zm.h	/^  uint16_t rcvndx;           \/* Index to the next valid bytes in rcvbuf[] (1) *\/$/;"	m	struct:zm_state_s
reentrant_function	host/nuttx/compiler.h	103;"	d
reentrant_function	host/nuttx/compiler.h	302;"	d
reentrant_function	host/nuttx/compiler.h	412;"	d
reentrant_function	host/nuttx/compiler.h	495;"	d
reentrant_function	host/nuttx/compiler.h	534;"	d
remfd	zm.h	/^  int      remfd;            \/* The R\/W file descritor used for communication with remote *\/$/;"	m	struct:zm_state_s
restrict	host/nuttx/compiler.h	276;"	d
restrict	host/nuttx/compiler.h	395;"	d
restrict	host/nuttx/compiler.h	529;"	d
rfilename	zm.h	/^  FAR const char *rfilename; \/* Remote filename *\/$/;"	m	struct:zms_state_s
scaps	zm.h	/^  uint8_t scaps;             \/* Sender capabilities *\/$/;"	m	struct:zmr_state_s
sched_lock	host/nuttx/config.h	79;"	d
sched_unlock	host/nuttx/config.h	80;"	d
scratch	zm.h	/^  uint8_t  scratch[CONFIG_SYSTEM_ZMODEM_SNDBUFSIZE];$/;"	m	struct:zm_state_s
show_usage	rz_main.c	/^static void show_usage(FAR const char *progname, int errcode)$/;"	f	file:
show_usage	sz_main.c	/^static void show_usage(FAR const char *progname, int errcode)$/;"	f	file:
state	zm.h	/^  uint8_t  state;            \/* Current transfer state; index into evtable[] *\/$/;"	m	struct:zm_state_s
timeout	zm.h	/^  uint8_t  timeout;          \/* Timeout in seconds for incoming data *\/$/;"	m	struct:zm_state_s
timer	zm.h	/^  timer_t  timer;            \/* Watchdog timer *\/$/;"	m	struct:zm_state_s
timestamp	zm.h	/^  time_t timestamp;          \/* Remote time stamp *\/$/;"	m	struct:zmr_state_s
timestamp	zm.h	/^  uint32_t timestamp;        \/* Local file timestamp *\/$/;"	m	struct:zms_state_s
type	zm.h	/^  uint8_t    type;           \/* Event (Frame type) *\/$/;"	m	struct:zm_transition_s
updcrc	host/crc16.c	102;"	d	file:
weak_alias	host/nuttx/compiler.h	273;"	d
weak_alias	host/nuttx/compiler.h	392;"	d
weak_alias	host/nuttx/compiler.h	488;"	d
weak_alias	host/nuttx/compiler.h	526;"	d
weak_alias	host/nuttx/compiler.h	73;"	d
weak_alias	host/nuttx/compiler.h	79;"	d
weak_const_function	host/nuttx/compiler.h	275;"	d
weak_const_function	host/nuttx/compiler.h	394;"	d
weak_const_function	host/nuttx/compiler.h	490;"	d
weak_const_function	host/nuttx/compiler.h	528;"	d
weak_const_function	host/nuttx/compiler.h	76;"	d
weak_const_function	host/nuttx/compiler.h	81;"	d
weak_function	host/nuttx/compiler.h	274;"	d
weak_function	host/nuttx/compiler.h	393;"	d
weak_function	host/nuttx/compiler.h	489;"	d
weak_function	host/nuttx/compiler.h	527;"	d
weak_function	host/nuttx/compiler.h	75;"	d
weak_function	host/nuttx/compiler.h	80;"	d
zalloc	host/nuttx/config.h	/^static inline void *zalloc(unsigned long size)$/;"	f
zm_be32toby	zm_utils.c	/^void zm_be32toby(uint32_t val32, FAR uint8_t *val8)$/;"	f
zm_bytobe32	zm_utils.c	/^uint32_t zm_bytobe32(FAR const uint8_t *val8)$/;"	f
zm_data	zm_state.c	/^static int zm_data(FAR struct zm_state_s *pzm, uint8_t ch)$/;"	f	file:
zm_dataevent	zm_state.c	/^static int zm_dataevent(FAR struct zm_state_s *pzm)$/;"	f	file:
zm_datapump	zm_state.c	/^int zm_datapump(FAR struct zm_state_s *pzm)$/;"	f
zm_decnibble	zm_utils.c	/^uint8_t zm_decnibble(char hex)$/;"	f
zm_dumpbuffer	zm.h	795;"	d
zm_dumpbuffer	zm_dumpbuffer.c	/^void zm_dumpbuffer(FAR const char *msg, FAR const void *buffer, size_t buflen)$/;"	f
zm_encnibble	zm_utils.c	/^char zm_encnibble(uint8_t nibble)$/;"	f
zm_event	zm_state.c	/^static int zm_event(FAR struct zm_state_s *pzm, int event)$/;"	f	file:
zm_expiry	zm_watchdog.c	/^static void zm_expiry(int signo, FAR siginfo_t *info, FAR void *context)$/;"	f	file:
zm_filecrc	zm_utils.c	/^uint32_t zm_filecrc(FAR struct zm_state_s *pzm, FAR const char *filename)$/;"	f
zm_getc	zm_utils.c	/^int zm_getc(int fd)$/;"	f
zm_hdrevent	zm_state.c	/^static int zm_hdrevent(FAR struct zm_state_s *pzm)$/;"	f	file:
zm_header	zm_state.c	/^static int zm_header(FAR struct zm_state_s *pzm, uint8_t ch)$/;"	f	file:
zm_idle	zm_state.c	/^static int zm_idle(FAR struct zm_state_s *pzm, uint8_t ch)$/;"	f	file:
zm_nakhdr	zm_state.c	/^static int zm_nakhdr(FAR struct zm_state_s *pzm)$/;"	f	file:
zm_option_e	host/apps/zmodem.h	/^enum zm_option_e$/;"	g
zm_parse	zm_state.c	/^static int zm_parse(FAR struct zm_state_s *pzm, size_t rcvlen)$/;"	f	file:
zm_puthex8	zm_utils.c	/^FAR uint8_t *zm_puthex8(FAR uint8_t *ptr, uint8_t ch)$/;"	f
zm_putzdle	zm_proto.c	/^FAR uint8_t *zm_putzdle(FAR struct zm_state_s *pzm, FAR uint8_t *buffer,$/;"	f
zm_read	zm_utils.c	/^ssize_t zm_read(int fd, FAR uint8_t *buffer, size_t buflen)$/;"	f
zm_readstate	zm_state.c	/^void zm_readstate(FAR struct zm_state_s *pzm)$/;"	f
zm_remwrite	zm.h	551;"	d
zm_remwrite	zm_utils.c	/^ssize_t zm_remwrite(int fd, FAR const uint8_t *buffer, size_t buflen)$/;"	f
zm_sendbin16hdr	zm_proto.c	/^int zm_sendbin16hdr(FAR struct zm_state_s *pzm, int type,$/;"	f
zm_sendbin32hdr	zm_proto.c	/^int zm_sendbin32hdr(FAR struct zm_state_s *pzm, int type,$/;"	f
zm_sendbinhdr	zm_proto.c	/^int zm_sendbinhdr(FAR struct zm_state_s *pzm, int type,$/;"	f
zm_senddata	zm_proto.c	/^int zm_senddata(FAR struct zm_state_s *pzm, FAR const uint8_t *buffer,$/;"	f
zm_sendhexhdr	zm_proto.c	/^int zm_sendhexhdr(FAR struct zm_state_s *pzm, int type,$/;"	f
zm_state_s	zm.h	/^struct zm_state_s$/;"	s
zm_timeout	zm_state.c	/^int zm_timeout(FAR struct zm_state_s *pzm)$/;"	f
zm_timerinit	zm_watchdog.c	/^int zm_timerinit(FAR struct zm_state_s *pzm)$/;"	f
zm_timerrelease	zm_watchdog.c	/^int zm_timerrelease(FAR struct zm_state_s *pzm)$/;"	f
zm_timerstart	zm_watchdog.c	/^int zm_timerstart(FAR struct zm_state_s *pzm, unsigned int sec)$/;"	f
zm_timerstop	zm.h	772;"	d
zm_transition_s	zm.h	/^struct zm_transition_s$/;"	s
zm_write	zm_utils.c	/^ssize_t zm_write(int fd, FAR const uint8_t *buffer, size_t buflen)$/;"	f
zm_writefile	zm_utils.c	/^int zm_writefile(int fd, FAR const uint8_t *buffer, size_t buflen, bool zcnl)$/;"	f
zm_xfertype_e	host/apps/zmodem.h	/^enum zm_xfertype_e$/;"	g
zmdbg	zm.h	234;"	d
zmdbg	zm.h	239;"	d
zmdbg	zm.h	242;"	d
zmodem_state_e	zm_send.c	/^enum zmodem_state_e$/;"	g	file:
zmprintf	zm.h	233;"	d
zmprintf	zm.h	238;"	d
zmprintf	zm.h	241;"	d
zmr_badrpos	zm_receive.c	/^static int zmr_badrpos(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_cmddata	zm_receive.c	/^static int zmr_cmddata(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_cmdto	zm_receive.c	/^static int zmr_cmdto(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_doneto	zm_receive.c	/^static int zmr_doneto(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_error	zm_receive.c	/^static int zmr_error(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_filecleanup	zm_receive.c	/^static void zmr_filecleanup(FAR struct zmr_state_s *pzmr)$/;"	f	file:
zmr_filedata	zm_receive.c	/^static int zmr_filedata(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_fileerror	zm_receive.c	/^static int zmr_fileerror(FAR struct zmr_state_s *pzmr, uint8_t type,$/;"	f	file:
zmr_filename	zm_receive.c	/^static int zmr_filename(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_fileto	zm_receive.c	/^static int zmr_fileto(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_finto	zm_receive.c	/^static int zmr_finto(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_freecnt	zm_receive.c	/^static int zmr_freecnt(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_initialize	zm_receive.c	/^ZMRHANDLE zmr_initialize(int remfd)$/;"	f
zmr_message	zm_receive.c	/^int zmr_message(FAR struct zm_state_s *pzm)$/;"	f
zmr_nakcrc	zm_receive.c	/^static int zmr_nakcrc(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_oo	zm_receive.c	/^static int zmr_oo(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_openfile	zm_receive.c	/^static int zmr_openfile(FAR struct zmr_state_s *pzmr, uint32_t crc)$/;"	f	file:
zmr_parsefilename	zm_receive.c	/^static int zmr_parsefilename(FAR struct zmr_state_s *pzmr,$/;"	f	file:
zmr_rcvto	zm_receive.c	/^static int zmr_rcvto(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_receive	zm_receive.c	/^int zmr_receive(ZMRHANDLE handle)$/;"	f
zmr_release	zm_receive.c	/^int zmr_release(ZMRHANDLE handle)$/;"	f
zmr_startto	zm_receive.c	/^static int zmr_startto(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_state_s	zm.h	/^struct zmr_state_s$/;"	s
zmr_zcrc	zm_receive.c	/^static int zmr_zcrc(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_zdata	zm_receive.c	/^static int zmr_zdata(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_zeof	zm_receive.c	/^static int zmr_zeof(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_zfile	zm_receive.c	/^static int zmr_zfile(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_zfin	zm_receive.c	/^static int zmr_zfin(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_zrinit	zm_receive.c	/^static int zmr_zrinit(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_zsinit	zm_receive.c	/^static int zmr_zsinit(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_zsrintdata	zm_receive.c	/^static int zmr_zsrintdata(FAR struct zm_state_s *pzm)$/;"	f	file:
zmr_zstderr	zm_receive.c	/^static int zmr_zstderr(FAR struct zm_state_s *pzm)$/;"	f	file:
zmrs_e	zm_receive.c	/^enum zmrs_e$/;"	g	file:
zms_abort	zm_send.c	/^static int zms_abort(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_attention	zm_send.c	/^static int zms_attention(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_challenge	zm_send.c	/^static int zms_challenge(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_cmdto	zm_send.c	/^static int zms_cmdto(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_command	zm_send.c	/^static int zms_command(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_doneto	zm_send.c	/^static int zms_doneto(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_endoftransfer	zm_send.c	/^static int zms_endoftransfer(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_error	zm_send.c	/^static int zms_error(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_filecrc	zm_send.c	/^static int zms_filecrc(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_fileskip	zm_send.c	/^static int zms_fileskip(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_finish	zm_send.c	/^static int zms_finish(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_ignore	zm_send.c	/^static int zms_ignore(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_initdone	zm_send.c	/^static int zms_initdone(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_initialize	zm_send.c	/^ZMSHANDLE zms_initialize(int remfd)$/;"	f
zms_message	zm_send.c	/^static int zms_message(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_release	zm_send.c	/^int zms_release(ZMSHANDLE handle)$/;"	f
zms_resendeof	zm_send.c	/^static int zms_resendeof(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_send	zm_send.c	/^int zms_send(ZMSHANDLE handle, FAR const char *filename,$/;"	f
zms_sendack	zm_send.c	/^static int zms_sendack(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_senddoneack	zm_send.c	/^static int zms_senddoneack(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_sendfile	zm_send.c	/^static int zms_sendfile(FAR struct zms_state_s *pzms, FAR const char *filename,$/;"	f	file:
zms_sendfiledata	zm_send.c	/^static int zms_sendfiledata(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_sendfilename	zm_send.c	/^static int zms_sendfilename(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_sendnak	zm_send.c	/^static int zms_sendnak(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_sendpacket	zm_send.c	/^static int zms_sendpacket(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_sendrpos	zm_send.c	/^static int zms_sendrpos(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_sendwaitack	zm_send.c	/^static int zms_sendwaitack(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_sendzsinit	zm_send.c	/^static int zms_sendzsinit(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_startfiledata	zm_send.c	/^static int zms_startfiledata(FAR struct zms_state_s *pzms)$/;"	f	file:
zms_state_s	zm.h	/^struct zms_state_s$/;"	s
zms_stderrdata	zm_send.c	/^static int zms_stderrdata(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_timeout	zm_send.c	/^static int zms_timeout(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_xfrdone	zm_send.c	/^static int zms_xfrdone(FAR struct zm_state_s *pzm)$/;"	f	file:
zms_zrinit	zm_send.c	/^static int zms_zrinit(FAR struct zm_state_s *pzm)$/;"	f	file:
zrpos	zm.h	/^  off_t zrpos;               \/* Last offset from ZRPOS *\/$/;"	m	struct:zms_state_s
